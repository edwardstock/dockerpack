# disabling output can increase build speed
commands_verbose: true
# default working directory: ~/project (it will be created if not exist)
workdir: /root/bigmath
# this command will be executed right after image run
# code will be checked out in /root/bigmath (workdir)
checkout: git clone --recursive https://github.com/edwardstock/bigmath.git .

# also you can copy local files
#copy:
#  - ~/projects/cpp/bigmath /root/

env:
  MY_GLOBAL_ENV: some_value

# list of named commands to use in job steps
commands:
  hello_command:
    steps:
      - echo "hello" > /tmp/hello.txt

  # command name
  sample_command:
    # step sequence
    steps:
      # you can just write your command as element
      - echo "sample_command_step" >> /tmp/progress.txt
      # use another command from stack (it means you can use only those command what already defined upward)
      - hello_command
      # or write fully customizable command with error ignorance flag, custom workdir or pass special environment vars
      - run:
          command: ls -lsa .
          # it's just to print instead command
          name: tmp list files
          # exit code can be ignored
          skip_on_error: true
          # change workdir only for this step
          workdir: /tmp
          # use "true" if you want to re-run this step anyway (it will not be saved to success state)
          stateless: false
          # use custom envs
          env:
            MY_VAR: 1
            MY_VAR2: 2

  test:
    steps:
      - run: rm -rf _build
      - run: sh .circleci/test.sh

  cmake:
    steps:
      - run: wget -O /tmp/cmake.sh https://github.com/Kitware/CMake/releases/download/v3.18.3/cmake-3.18.3-Linux-x86_64.sh
      - run: sh /tmp/cmake.sh --skip-license --prefix=/usr

  build_and_package:
    steps:
      - run: bash cfg/package_make.sh
        # if while executing script something going wrong, command should return a valid exit code (non zero for error) to stop building
        # for bash script use "set -e"

  deploy:
    steps:
      - run:
          command: cp _build/*.rpm .
          skip_on_error: true

      - run:
          command: cp _build/*.deb .
          skip_on_error: true

      - run: cp _build/package_upload.sh .
      - run: bash package_upload.sh dry

  make_project:
    steps:
      - test
      - build_and_package
      - deploy

  init_deb:
    steps:
      - run: apt -y update
      - run: apt -y install wget curl git
      - run: apt -y install gcc g++ make lsb-release autoconf python3 python3-pip libmpdec-dev libgmp-dev
      - run: pip3 install --upgrade pip
      - run: pip3 install setuptools
      - run: pip3 install conan
      - run: conan install mpir/3.0.0@ --build=missing -s build_type=Debug
      - run: conan install mpdecimal/2.4.2@ --build=missing -s build_type=Debug

  init_centos7:
    steps:
      - run: yum -y update && yum -y install epel-release centos-release-scl && yum -y update
      - run: yum -y install curl wget git make autoconf rpm-build python36 devtoolset-9
      - run: scl enable devtoolset-9 bash
      - run: yum -y install gmp-devel mpdecimal-devel
      - run: pip3 install --upgrade pip
      - run: pip3 install setuptools
      - run: pip3 install conan
      - run: conan profile new /root/.conan/profiles/default --detect --force
      - run: conan install mpir/3.0.0@ --build=missing -s build_type=Debug
      - run: conan install mpdecimal/2.4.2@ --build=missing -s build_type=Debug

  init_centos8:
    steps:
      - run: yum -y update && yum -y install epel-release
      - run: yum -y install https://rpms.remirepo.net/enterprise/remi-release-8.rpm && yum -y update
      - run: yum -y install curl wget git make autoconf rpm-build python36 gcc gcc-c++
      - run: yum -y install gmp-devel mpdecimal-devel
      - run: pip3 install --upgrade pip
      - run: pip3 install setuptools
      - run: pip3 install conan
      - run: conan install mpir/3.0.0@ --build=missing -s build_type=Debug
      - run: conan install mpdecimal/2.4.2@ --build=missing -s build_type=Debug

  init_fedora:
    steps:
      - run: dnf -y update
      - run: dnf -y install curl wget git gcc gcc-c++ make autoconf rpm-build cmake which
      - run: dnf -y install mpir-devel mpdecimal-devel python36
      - run: pip3 install --upgrade pip
      - run: pip3 install setuptools
      - run: pip3 install conan
      - run: conan install mpir/3.0.0@ --build=missing
      - run: conan install mpdecimal/2.4.2@ --build=missing

build_images:
  edwardstock/bigmath_el7:
    tag: 1
    image: centos:centos7
    steps:
      - init_centos7
      - cmake

  edwardstock/bigmath_el8:
    tag: 1
    image: centos:centos8
    steps:
      - init_centos8
      - cmake

  edwardstock/bigmath_fc32:
    tag: 1
    image: fedora:32
    steps:
      - init_fedora
      - cmake

  edwardstock/bigmath_fc33:
    tag: 1
    image: fedora:33
    steps:
      - init_fedora
      - cmake

  edwardstock/bigmath_fc34:
    tag: 1
    image: fedora:34
    steps:
      - init_fedora
      - cmake

  edwardstock/bigmath_deb_stretch:
    tag: 1
    image: debian:stretch
    steps:
      - init_deb
      - cmake

  edwardstock/bigmath_deb_buster:
    tag: 1
    image: debian:buster
    steps:
      - init_deb
      - cmake
  edwardstock/bigmath_ubuntu_xenial:
    tag: 1
    image: ubuntu:xenial
    steps:
      - init_deb
      - cmake
  edwardstock/bigmath_ubuntu_bionic:
    tag: 1
    image: ubuntu:bionic
    steps:
      - init_deb
      - cmake
  edwardstock/bigmath_ubuntu_focal:
    tag: 1
    image: ubuntu:focal
    steps:
      - init_deb
      - cmake
  edwardstock/bigmath_ubuntu_groovy:
    tag: 1
    image: ubuntu:groovy
    steps:
      - init_deb
      - cmake

multijob:
  images:
    # special config for centos 7
    - config:
      image: edwardstock/bigmath_el7:1
      env:
        CC: /opt/rh/devtoolset-9/root/bin/gcc
        CXX: /opt/rh/devtoolset-9/root/bin/g++

    - edwardstock/bigmath_el8:1
    - edwardstock/bigmath_fc32:1
    - edwardstock/bigmath_fc33:1
    - edwardstock/bigmath_fc34:1
    - edwardstock/bigmath_deb_stretch:1
    - edwardstock/bigmath_deb_buster:1
    - edwardstock/bigmath_ubuntu_xenial:1
    - edwardstock/bigmath_ubuntu_bionic:1
    - edwardstock/bigmath_ubuntu_focal:1
    - edwardstock/bigmath_ubuntu_groovy:1

  env:
    BINTRAY_USER: edwardstock
    BINTRAY_API_KEY: $ENV

  steps:
    - make_project

# this is the same what doing multijob section

#jobs:
#  centos7:
#    image: edwardstock/bigmath_el7:1
#    env:
#      BINTRAY_USER: edwardstock
#      BINTRAY_API_KEY: $ENV
#      CC: /opt/rh/devtoolset-9/root/bin/gcc
#      CXX: /opt/rh/devtoolset-9/root/bin/g++
#    steps:
#      - make_project
#  centos8:
#    image: edwardstock/bigmath_el8:1
#    env:
#      BINTRAY_USER: edwardstock
#      BINTRAY_API_KEY: $ENV
#    steps:
#      - make_project
#  fedora32:
#    image: edwardstock/bigmath_fc32:1
#    env:
#      BINTRAY_USER: edwardstock
#      BINTRAY_API_KEY: $ENV
#    steps:
#      - make_project
#  fedora33:
#    image: edwardstock/bigmath_fc33:1
#    env:
#      BINTRAY_USER: edwardstock
#      BINTRAY_API_KEY: $ENV
#    steps:
#      - make_project
#  fedora34:
#    image: edwardstock/bigmath_fc34:1
#    env:
#      BINTRAY_USER: edwardstock
#      BINTRAY_API_KEY: $ENV
#    steps:
#      - make_project
#  debian_stretch:
#    image: edwardstock/bigmath_deb_stretch:1
#    env:
#      BINTRAY_USER: edwardstock
#      BINTRAY_API_KEY: $ENV
#    steps:
#      - make_project
#  debian_buster:
#    image: edwardstock/bigmath_deb_buster:1
#    env:
#      BINTRAY_USER: edwardstock
#      BINTRAY_API_KEY: $ENV
#    steps:
#      - make_project
#  ubuntu_xenial:
#    image: edwardstock/bigmath_ubuntu_xenial:1
#    env:
#      BINTRAY_USER: edwardstock
#      BINTRAY_API_KEY: $ENV
#    steps:
#      - make_project
#  ubuntu_bionic:
#    image: edwardstock/bigmath_ubuntu_bionic:1
#    env:
#      BINTRAY_USER: edwardstock
#      BINTRAY_API_KEY: $ENV
#    steps:
#      - make_project
#  ubuntu_focal:
#    image: edwardstock/bigmath_ubuntu_focal:1
#    env:
#      BINTRAY_USER: edwardstock
#      BINTRAY_API_KEY: $ENV
#    steps:
#      - make_project
#  ubuntu_groovy:
#    image: edwardstock/bigmath_ubuntu_groovy:1
#    env:
#      BINTRAY_USER: edwardstock
#      BINTRAY_API_KEY: $ENV
#    steps:
#      - make_project

